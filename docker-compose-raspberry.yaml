version: "3.9"
services:

  influxdb:
    image: influxdb:2.7-alpine
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_ORG: enphase
      DOCKER_INFLUXDB_INIT_BUCKET: solar
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influxdb_admin_password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influxdb_admin_token
    secrets:
      - influxdb_admin_password
      - influxdb_admin_token
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - token-volume:/token

    healthcheck:
      test: ["CMD", "sh", "-c", "[ -f /token/influxdb_write.token ] && influx ping --host http://localhost:8086"]
      interval: 10s
      timeout: 3s
      retries: 5

  grafana:
    image: grafana/grafana-oss:10.4.2
    depends_on:
      influxdb:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  ingestor:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app
    depends_on:
      influxdb:
        condition: service_healthy
    env_file:
      - .env
    environment:
      INFLUXDB_URL:    http://influxdb:8086
      INFLUXDB_ORG:    enphase
      INFLUXDB_BUCKET: solar
    volumes:
      - token-volume:/token:ro
    entrypoint:
      - sh
      - -c
      - |
        # wait for token
        while [ ! -f /token/influxdb_write.token ]; do sleep 1; done
        export INFLUXDB_TOKEN=$(cat /token/influxdb_write.token)
        exec python main.py

volumes:
  influxdb-data:
  grafana-data:
  token-volume:

secrets:
  influxdb_admin_password:
    file: secrets/influxdb_admin_password.txt
  influxdb_admin_token:
    file: secrets/influxdb_admin_token.txt
