name: Push to Cloud Source Repository

on:
  push:
    branches: [ main, google-cloud ]
permissions:
  id-token: write
  contents: read

env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  CSR_NAME:    ${{ secrets.CSR_NAME }}    # your Cloud Source Repo name

jobs:
  sync-to-gcp:
    runs-on: ubuntu-latest
    env:
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_repo_name: ${{ secrets.CSR_NAME }}
      TF_VAR_project_number: ${{ secrets.GCP_PROJECT_NUMBER }}
      TF_VAR_github_pat: ${{ secrets.GH_PAT }}
      TF_VAR_installation_id: ${{ secrets.GH_GCP_APP_INSTALLATION_ID }}
      TF_VAR_github_deploy_key: ${{ secrets.GH_DEPLOY_KEY }}
      TF_VAR_enphase_local_token: ${{ secrets.ENPHASE_LOCAL_TOKEN }}
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
      TF_STATE_PREFIX: terraform/state
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP using Workload Identity
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account:        ${{ secrets.GCP_SA_EMAIL }}
          create_credentials_file: true

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${TF_STATE_BUCKET}" \
            -backend-config="prefix=${TF_STATE_PREFIX}"
        working-directory: terraform

      - name: Terraform Apply (Cloud Source Repo)
        run: terraform apply --auto-approve
        working-directory: terraform
